# data file for the Fltk User Interface Designer (fluid)
version 1.0009 
header_name {.hpp} 
code_name {.cc} 
gridx 5 
gridy 5 
snap 3
class SettingsWindow {open
} {
  decl {int cur_size;} {}
  decl {int cur_labels;} {}
  decl {int cur_moves;} {}
  decl {void (*update_callback)();} {}
  Function {SettingsWindow()} {open
  } {
    Fl_Window win {
      label Settings open selected
      private xywh {1080 582 160 200} color 7 modal visible
    } {
      Fl_Group {} {
        label Settings open
        xywh {5 25 150 120} box BORDER_FRAME color 0
      } {
        Fl_Choice size_choice {
          label {Size:} open
          private xywh {60 35 85 25}
        } {
          menuitem {} {
            label 3x3
            xywh {0 0 100 20}
          }
          menuitem {} {
            label 4x4
            xywh {0 0 100 20}
          }
          menuitem {} {
            label 5x5
            xywh {0 0 100 20}
          }
        }
        Fl_Choice labels_choice {
          label {Labels:} open
          private xywh {60 70 85 25}
        } {
          menuitem {} {
            label numbers
            xywh {0 0 100 20}
          }
          menuitem {} {
            label letters
            xywh {0 0 100 20} value 1
          }
        }
        Fl_Choice moves_choice {
          label {Moves:} open
          private xywh {60 105 85 25} deactivate
        } {
          menuitem {} {
            label smooth
            xywh {0 0 100 20}
          }
          menuitem {} {
            label quick
            xywh {0 0 100 20} value 1
          }
        }
      }
      Fl_Button {} {
        label Ok
        callback {win->hide();
cur_size = size_choice->value();
cur_labels = labels_choice->value();
cur_moves = moves_choice->value();
if (update_callback != NULL) {
  update_callback();
}}
        xywh {10 155 60 25}
        code0 {\#include <stdio.h>}
      }
      Fl_Button {} {
        label Cancel
        callback {win->hide();
size_choice->value(cur_size);
labels_choice->value(cur_labels);
moves_choice->value(cur_moves);}
        xywh {85 155 65 25}
      }
    }
    code {size_choice->value(1);
moves_choice->value(1);} {}
    code {cur_size = size_choice->value();
cur_labels = labels_choice->value();
cur_moves = moves_choice->value();} {}
    code {update_callback = NULL;} {}
  }
  Function {show()} {open return_type void
  } {
    code {win->show();} {}
  }
  Function {get_size()} {open return_type int
  } {
    code {return cur_size + 3;} {}
  }
  Function {use_numbers()} {open return_type bool
  } {
    code {return cur_labels == 0;} {}
  }
  Function {smooth_moves()} {open return_type bool
  } {
    code {return cur_moves == 0;} {}
  }
  Function {set_update_callback(void (*update_callback)())} {open return_type void
  } {
    code {this->update_callback = update_callback;} {}
  }
} 
