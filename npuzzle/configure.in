dnl Process this file with autoconf to produce a configure script.
dnl
dnl $Id: configure.in,v 1.6 2001-04-28 16:00:06 jle Exp $

dnl -----------------------
dnl Autoconf initialization
dnl -----------------------
AC_INIT(src/PuzzleGame.cc)
AC_PREFIX_DEFAULT(/usr/local)
AC_LANG_CPLUSPLUS

dnl -----------------------
dnl Automake initialization
dnl -----------------------
AM_INIT_AUTOMAKE(npuzzle, 0.2)

dnl ------------
dnl C++ settings
dnl ------------
AC_PROG_CXX
AC_PROG_CXXCPP

dnl -------------------------------------
dnl Find FLTK fluid compiler if available
dnl -------------------------------------
AC_PATH_PROG(FLUID, fluid, fluid)

dnl -----------------------------
dnl Check for X headers/libraries
dnl -----------------------------
AC_PATH_XTRA
if test "$no_x" = yes; then
  AC_MSG_ERROR([Could not locate X Window System include files and libraries (us
e --x-includes and --x-libraries to specify correct directories).])
fi
test -z "$X_CFLAGS" || CFLAGS="$CFLAGS $X_CFLAGS"
test -z "$X_EXTRA_LIBS" || LIBS="$X_EXTRA_LIBS $LIBS"
LIBS="-lXext -lX11 $LIBS"
test -z "$X_PRE_LIBS" || LIBS="$X_PRE_LIBS $LIBS"
test -z "$X_LIBS" || LDFLAGS="$LDFLAGS $X_LIBS"

dnl --------------------------------
dnl Check for FLTK headers/libraries
dnl --------------------------------
AC_MSG_CHECKING(for FLTK)
fltk_libraries=
AC_ARG_WITH(fltk-libraries, [  --with-fltk-libraries=DIR FLTK libraries are in DIR], fltk_libraries="$withval", )
if test "$fltk_libraries" = no; then
  AC_MSG_RESULT([--with-fltk-libraries=no])
  AC_MSG_ERROR([FLTK libraries required to link.])
elif test "$fltk_libraries" = yes; then
  fltk_libraries=
fi
fltk_includes=
AC_ARG_WITH(fltk-includes, [  --with-fltk-includes=DIR FLTK include files are in DIR], fltk_includes="$withval", )
if test "$fltk_includes" = no; then
  AC_MSG_RESULT([--with-fltk-includes=no])
  AC_MSG_ERROR([FLTK include files required to compile.])
elif test "$fltk_includes" = yes; then
  fltk_includes=
fi
AC_MSG_RESULT([libraries ${fltk_libraries}, headers ${fltk_includes}])
test -z "$fltk_libraries" || LDFLAGS="$LDFLAGS -L$fltk_libraries"
test -z "$fltk_includes" || CPPFLAGS="$CPPFLAGS -I$fltk_includes"
AC_MSG_CHECKING([whether -lfltk requires -lGL])
__saved_libs="$LIBS"
__requires=no
LIBS="-lfltk $LIBS"
AC_TRY_LINK(, , AC_MSG_RESULT(no), __requires=yes; AC_MSG_RESULT(yes))
LIBS="$__saved_libs"
test "$__requires" = no || LIBS="-lGL $LIBS"
AC_CHECK_LIB(fltk, main, LIBS="-lfltk $LIBS", AC_MSG_ERROR([Could not link with FLTK libraries.]), $LDFLAGS $LIBS)
AC_CHECK_HEADER(FL/Fl.H, , AC_MSG_ERROR([Could not find FLTK include files.]))

dnl ----------------------------------------------------
dnl Check if Agenda Computing version of FLTK being used
dnl ----------------------------------------------------
AC_MSG_CHECKING(for FLTK with Agenda Computing patches)
AC_TRY_LINK([#include <FL/Fl_Repeat_Button.H>],
  [Fl_Repeat_Button *rp = 0;
   rp->repeat(0, 0);],
  CPPFLAGS="$CPPFLAGS -DHAVE_AGENDA_FLTK"; AC_MSG_RESULT(yes),
  AC_MSG_RESULT(no))

dnl -------------------------------------------------------------------
dnl Enable maintainer mode, if configured with --enable-maintainer-mode
dnl -------------------------------------------------------------------
AM_MAINTAINER_MODE

dnl ------------------
dnl Write output files
dnl ------------------
AC_OUTPUT(
  Makefile
  src/Makefile
)
